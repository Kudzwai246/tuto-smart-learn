name: Android CI - Capacitor Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Install npm dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci --no-audit --no-fund
          else
            npm install --no-audit --no-fund
          fi
        shell: bash

      - name: Build web assets (if build script exists)
        run: npm run build --if-present
        shell: bash

      - name: Ensure android platform & Capacitor sync
        run: |
          # Make sure node_modules exist
          if [ ! -d node_modules ]; then
            npm install --no-audit --no-fund
          fi

          # Add android platform if missing
          if [ ! -d android ]; then
            npx cap add android
          fi

          # Sync web assets and native plugins
          npx cap sync android
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.java-home }}
        shell: bash

      - name: Make android/gradlew executable (if present)
        run: |
          if [ -f android/gradlew ]; then
            chmod +x android/gradlew
            echo "Using repo gradlew"
          else
            echo "No android/gradlew found"
          fi
        shell: bash

      - name: Prepare Gradle command
        id: prepare_gradle
        run: |
          if [ -f android/gradlew ]; then
            echo "gradle_cmd=./android/gradlew" > gradle_cmd.txt
          else
            ZIP="gradle-8.2.1-bin.zip"
            curl -sSLO "https://services.gradle.org/distributions/${ZIP}"
            unzip -q "${ZIP}"
            echo "gradle_cmd=$(pwd)/gradle-8.2.1/bin/gradle" > gradle_cmd.txt
          fi
          cat gradle_cmd.txt
        shell: bash

      - name: Get GRADLE_CMD
        id: get_gradle_cmd
        run: |
          GR=$(cat gradle_cmd.txt | cut -d'=' -f2-)
          echo "GRADLE_CMD=${GR}"
          echo "::set-output name=cmd::${GR}"
        shell: bash

      - name: Build debug APK
        run: |
          GR_CMD="${{ steps.get_gradle_cmd.outputs.cmd }}"
          echo "Using gradle: $GR_CMD"
          if [ "$GR_CMD" = "./android/gradlew" ]; then
            cd android
            ./gradlew assembleDebug --no-daemon
          else
            "$GR_CMD" -p android assembleDebug --no-daemon
          fi
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.java-home }}
        shell: bash

      - name: Build release APK (attempt)
        run: |
          GR_CMD="${{ steps.get_gradle_cmd.outputs.cmd }}"
          if [ "$GR_CMD" = "./android/gradlew" ]; then
            cd android
            ./gradlew assembleRelease --no-daemon || true
          else
            "$GR_CMD" -p android assembleRelease --no-daemon || true
          fi
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.java-home }}
        shell: bash

      - name: Show APKs found
        run: |
          echo "Looking for APKs..."
          find . -type f -name "*.apk" -print || echo "No APKs found"
        shell: bash

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-apks
          path: |
            **/build/outputs/**/*.apk
