name: Android CI - Capacitor (install node_modules & build)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    env:
      GRADLE_VERSION: "8.2.1"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install npm dependencies
        shell: bash
        run: |
          if [ -f package-lock.json ]; then
            npm ci --no-audit --no-fund
          else
            npm install --no-audit --no-fund
          fi

      - name: Install Capacitor CLI & common plugins (temporary)
        shell: bash
        run: |
          npm install @capacitor/cli @capacitor/app @capacitor/haptics @capacitor/keyboard @capacitor/status-bar --no-audit --no-fund --no-save || true

      - name: Run Capacitor sync for Android
        shell: bash
        run: |
          npx cap sync android || npx cap update android || true

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Install Android SDK 35 & build-tools 35.0.0 (best-effort)
        shell: bash
        env:
          ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
        run: |
          if command -v sdkmanager >/dev/null 2>&1; then
            yes | sdkmanager --sdk_root="$ANDROID_SDK_ROOT" "platforms;android-35" "build-tools;35.0.0" || true
          else
            # try common alternative location (may not exist on hosted runner)
            if [ -x "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" ]; then
              yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" "platforms;android-35" "build-tools;35.0.0" || true
            else
              echo "sdkmanager not found; continuing. Platform 35 may be missing."
            fi
          fi

      - name: Make android/gradlew executable if present
        shell: bash
        run: |
          if [ -f "./android/gradlew" ]; then
            chmod +x ./android/gradlew
            ls -l android/gradlew || true
          else
            echo "No android/gradlew found in repo root/android; will download Gradle if needed."
          fi

      - name: Ensure gradle CLI present (download if wrapper missing)
        shell: bash
        run: |
          if [ -f "./android/gradlew" ]; then
            echo "Wrapper present; will use android/gradlew"
          else
            ZIP=gradle-${GRADLE_VERSION}-bin.zip
            curl -sSLO "https://services.gradle.org/distributions/${ZIP}"
            unzip -q "${ZIP}"
            chmod +x gradle-${GRADLE_VERSION}/bin/gradle
            echo "Downloaded gradle ${GRADLE_VERSION} to ./gradle-${GRADLE_VERSION}"
          fi

      - name: Build debug and release (android/)
        shell: bash
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.java-home }}
        run: |
          # Decide which gradle command to use
          if [ -f "./android/gradlew" ]; then
            GRADLE_CMD="./android/gradlew"
          else
            GRADLE_CMD="$(pwd)/gradle-${GRADLE_VERSION}/bin/gradle"
          fi
          echo "Using Gradle command: $GRADLE_CMD"

          # Run inside android/ if gradlew exists there (so relative paths work)
          if [ -d "android" ]; then
            pushd android >/dev/null
            $GRADLE_CMD assembleDebug --no-daemon
            $GRADLE_CMD assembleRelease --no-daemon || true
            popd >/dev/null
          else
            # If no android folder, try running gradle with -p android
            $GRADLE_CMD -p android assembleDebug --no-daemon || true
            $GRADLE_CMD -p android assembleRelease --no-daemon || true
          fi

      - name: Find APKs
        shell: bash
        run: |
          echo "=== APKs found ==="
          find . -type f -name "*.apk" -print || echo "No APKs found."

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-apks
          path: |
            **/build/outputs/**/*.apk
