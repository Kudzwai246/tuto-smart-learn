name: Android CI - Capacitor Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install npm dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci --no-audit --no-fund
          else
            npm install --no-audit --no-fund
          fi
        shell: bash

      - name: Build web assets
        run: npm run build
        shell: bash

      - name: Ensure android platform & Capacitor sync
        run: |
          # Make sure node_modules exist
          if [ ! -d node_modules ]; then
            npm install --no-audit --no-fund
          fi

          # Add android platform if missing
          if [ ! -d android ]; then
            npx cap add android
          fi

          # Sync web assets and native plugins
          npx cap sync android
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.java-home }}
        shell: bash

      - name: Make gradlew executable
        run: chmod +x android/gradlew
        shell: bash

      - name: Build debug APK
        run: |
          cd android
          ./gradlew assembleDebug --no-daemon --stacktrace
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.java-home }}
        shell: bash

      - name: Build release APK
        run: |
          cd android
          ./gradlew assembleRelease --no-daemon --stacktrace
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.java-home }}
        shell: bash
        continue-on-error: true

      - name: Show APKs found
        run: |
          echo "Looking for APKs..."
          find . -type f -name "*.apk" -print || echo "No APKs found"
        shell: bash

      - name: Upload APK artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tutosmart-apks
          path: |
            android/app/build/outputs/apk/**/*.apk
          retention-days: 30

      - name: Upload build reports
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: build-reports
          path: |
            android/app/build/reports/
            android/app/build/outputs/logs/
          retention-days: 7