name: Android CI - Build Android Subfolder

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    env:
      GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx1g"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Show repo root and android folder
        run: |
          echo "=== Repo root listing ==="
          ls -la
          echo
          echo "=== android folder listing ==="
          ls -la android || echo "No android directory"
        shell: bash

      - name: Set up JDK 17
        id: setup-java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Make android/gradlew executable if present
        run: |
          if [ -f "./android/gradlew" ]; then
            echo "Found android/gradlew -> making executable"
            chmod +x ./android/gradlew
            ls -l android/gradlew
          else
            echo "No android/gradlew found"
          fi
        shell: bash

      - name: Decode keystore (optional)
        run: |
          if [ -n "${{ secrets.KEYSTORE_BASE64 }}" ]; then
            echo "Decoding keystore to ./android/release.keystore"
            mkdir -p android
            echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/release.keystore
            ls -l android/release.keystore || true
          else
            echo "No KEYSTORE_BASE64 secret provided; skipping keystore decode."
          fi
        shell: bash

      - name: Build (debug) inside android/ folder
        run: |
          echo "Using JAVA_HOME: $JAVA_HOME"
          if [ -f "./android/gradlew" ]; then
            echo "Running android/gradlew assembleDebug"
            cd android
            ./gradlew assembleDebug --no-daemon
            cd ..
          else
            echo "No gradlew wrapper; installing system gradle and running gradle -p android assembleDebug"
            sudo apt-get update
            sudo apt-get install -y gradle
            gradle -p android assembleDebug
          fi
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.java-home }}
        shell: bash

      - name: Build (release) inside android/ folder
        run: |
          if [ -f "./android/gradlew" ]; then
            echo "Running android/gradlew assembleRelease"
            cd android
            ./gradlew assembleRelease --no-daemon || echo "assembleRelease failed (check logs)"
            cd ..
          else
            echo "No gradlew wrapper; installing system gradle and running gradle -p android assembleRelease"
            sudo apt-get update
            sudo apt-get install -y gradle
            gradle -p android assembleRelease || echo "assembleRelease failed (check logs)"
          fi
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.java-home }}
        shell: bash

      - name: Show built APK locations
        run: |
          echo "=== Searching for APKs ==="
          find . -type f -name "*.apk" -print || echo "No APKs found."
        shell: bash

      - name: Upload build artifacts (any APKs found)
        uses: actions/upload-artifact@v4
        with:
          name: app-apks
          path: |
            **/build/outputs/**/*.apk
