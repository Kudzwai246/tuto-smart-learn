apply plugin: 'com.android.application'

android {
    namespace 'com.tutosmart.learn'
    compileSdk 34
    buildToolsVersion "34.0.0"

    defaultConfig {
        applicationId "com.tutosmart.learn"
        minSdk 22
        targetSdk 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        aaptOptions {
            // Files and dirs to omit from the packaged APK.
            ignoreAssetsPattern "!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~"
        }
    }

    // Ensure Java compatibility matches your JDK in CI (use 17 or 21 depending on your runner)
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    // If you're using Kotlin in the project, you may add kotlinOptions here too.

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.core:core-splashscreen:1.0.1'
    implementation 'androidx.webkit:webkit:1.8.0'
    
    // Capacitor Android - with fallback error handling
    try {
        implementation project(':capacitor-android')
        println "✓ Capacitor Android dependency resolved successfully"
    } catch (Exception e) {
        println "✗ ERROR: Failed to resolve Capacitor Android dependency: ${e.message}"
        throw new GradleException("Capacitor Android dependency missing. Run 'npx cap sync android' first.")
    }
    
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
