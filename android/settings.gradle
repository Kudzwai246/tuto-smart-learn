// android/settings.gradle
// Smart conditional includes for Capacitor plugin modules.
// Include plugin projects only when the target folder exists and looks like an Android library.

include ':app'

// Helper to include a project only if its folder and build.gradle indicate an Android project.
def tryIncludeIfAndroid = { String projName, String relPath ->
    def p = file(relPath)
    if (!p.exists()) {
        println "Skipping ${projName}: folder ${relPath} not found"
        return false
    }

    def buildFile = new File(p, 'build.gradle')
    def settingsOk = false

    if (buildFile.exists()) {
        def text = buildFile.getText('UTF-8')
        if (text.contains('com.android') || text.contains('com.android.library') || text.contains('com.android.application') || text.contains('plugins {')) {
            settingsOk = true
        }
    }

    if (settingsOk) {
        include ":${projName}"
        project(":${projName}").projectDir = p
        println "Included ${projName} -> ${relPath}"
        return true
    } else {
        println "Skipping ${projName}: build.gradle missing or not an Android library at ${relPath}"
        return false
    }
}

// Try to include capacitor-cordova-android-plugins only if it looks like an Android project
tryIncludeIfAndroid('capacitor-cordova-android-plugins', 'capacitor-cordova-android-plugins')

// Capacitor runtime (try common locations)
def tryInclude = { String projName, List candidatePaths ->
    boolean included = false
    for (p in candidatePaths) {
        def f = file(p)
        if (f.exists()) {
            include ":${projName}"
            project(":${projName}").projectDir = f
            println "Included ${projName} -> ${p}"
            included = true
            break
        }
    }
    if (!included) {
        println "Skipping ${projName}: none of paths found: ${candidatePaths}"
    }
    return included
}

tryInclude('capacitor-android', [
    '../node_modules/@capacitor/android/capacitor',
    '../node_modules/@capacitor/android'
])

tryInclude('capacitor-app', [
    '../node_modules/@capacitor/app/android',
    '../node_modules/@capacitor/app'
])

tryInclude('capacitor-haptics', [
    '../node_modules/@capacitor/haptics/android',
    '../node_modules/@capacitor/haptics'
])

tryInclude('capacitor-keyboard', [
    '../node_modules/@capacitor/keyboard/android',
    '../node_modules/@capacitor/keyboard'
])

tryInclude('capacitor-status-bar', [
    '../node_modules/@capacitor/status-bar/android',
    '../node_modules/@capacitor/status-bar'
])
